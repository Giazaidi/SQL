# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 
--1. What are the longest top 10 tracks based on popularity?
SELECT track_name, popularity, max(duration_ms) FROM Spotifydata GROUP BY track_name ORDER BY popularity desc LIMIT 10;

--2. What is the average track duration of tracks that have a popularity of 90 or more?
SELECT AVG(duration_ms) FROM spotifydata WHERE popularity >=90;

--3. Who are the top 10 artists based on energy and popularity?
SELECT artist_name, energy, popularity FROM spotifydata GROUP BY artist_name ORDER BY energy, popularity desc LIMIT 10;

--4. What was the highest popularity score by track(s) and artist name(s)?
SELECT artist_name, track_name, max(popularity) FROM spotifydata GROUP BY artist_name,track_name HAVING max(popularity)=95;

--5. What is the average popularity, danceability, and energy by artist. 
SELECT artist_name,AVG(popularity), AVG(danceability), AVG(energy) FROM spotifydata GROUP BY track_name;
